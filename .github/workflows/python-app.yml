jobs:
  build:
    name: Build dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: |
          pip install poetry
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/${{ github.event.repository.name }}/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('example-app/poetry.lock') }}

      - name: Install dependencies
        working-directory: ./example-app
        run: poetry install

  lint:
    name: Linting & Security
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/${{ github.event.repository.name }}/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('example-app/poetry.lock') }}

      - name: Activate virtual environment
        working-directory: ./example-app
        run: |
          source $(poetry env info --path)/bin/activate

      - name: Run linter
        working-directory: ./example-app
        run: poetry run pylint apps

      - name: Run formatter
        working-directory: ./example-app
        run: poetry run black --check apps

      - name: Run security checks
        working-directory: ./example-app
        run: poetry run bandit -r apps

  unittest:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/${{ github.event.repository.name }}/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('example-app/poetry.lock') }}

      - name: Activate virtual environment
        working-directory: ./example-app
        run: |
          source $(poetry env info --path)/bin/activate

      - name: Run unit tests
        working-directory: ./example-app
        run: poetry run pytest tests/
