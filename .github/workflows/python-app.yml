name: Python CI

on: [push]

jobs:
  build:
    # Grupa concurrency (opcjonalna; jeśli jej używamy, 
    # to w pozostałych jobach także dajemy concurrency z tym samym group)
    concurrency:
      group: python-build-group
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Krok z cache. W 'path' ustaw ścieżkę do .venv 
      # (zależy od tego, gdzie je tworzysz).
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs2/iac-labs2/.venv  # <-- dostosuj do własnej ścieżki
          key: ${{ runner.os }}-venv

      - name: Install Poetry
        run: |
          pip install poetry
      - name: Install dependencies
        run: |
          poetry install --directory example-app

  lint:
    # Mówimy, że lint potrzebuje joba "build",
    # więc startuje dopiero, gdy build się zakończy sukcesem
    needs: build
    concurrency:
      group: python-build-group
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs2/iac-labs2/.venv
          key: ${{ runner.os }}-venv

      - name: Run linter
        run: |
          poetry run flake8 .

  formatter:
    # Również potrzebuje 'build', startuje równolegle z lint i security
    needs: build
    concurrency:
      group: python-build-group
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs2/iac-labs2/.venv
          key: ${{ runner.os }}-venv

      - name: Run formatter
        run: |
          poetry run black --check .

  security:
    needs: build
    concurrency:
      group: python-build-group
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs2/iac-labs2/.venv
          key: ${{ runner.os }}-venv

      - name: Security check
        run: |
          poetry run safety check

  unittests:
    # Potrzebują lint, formatter i security 
    # – uruchomi się dopiero, gdy wszystkie trzy zakończą się sukcesem
    needs: [lint, formatter, security]
    concurrency:
      group: python-build-group
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs2/iac-labs2/.venv
          key: ${{ runner.os }}-venv

      - name: Run unit tests
        run: |
          poetry run pytest --cov=.

