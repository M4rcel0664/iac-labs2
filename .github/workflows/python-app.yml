name: CI/CD with Poetry (Optimized Parallel Jobs)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.5
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: 🗂️ Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/example-app/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: 📥 Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-root

  static-analysis:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./example-app

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 🗂️ Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/example-app/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: 🛡️ Run lint
        run: poetry run task lint

      - name: 🎨 Run formatter
        run: poetry run task formatter

      - name: 🔒 Run security checks
        run: poetry run task security

  unittest:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./example-app

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 🗂️ Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/example-app/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: 🧪 Run unit tests
        run: poetry run task test
