name: Python CI/CD Pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: some-group-name
  cancel-in-progress: true

jobs:
  build:
    name: Build dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: pip install poetry

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/${{ github.event.repository.name }}/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install

  lint:
    name: Linting & Security
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/${{ github.event.repository.name }}/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run linter
        run: poetry run flake8

      - name: Run formatter
        run: poetry run black --check .

      - name: Run security checks
        run: poetry run bandit -r .

  unittest:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/${{ github.event.repository.name }}/example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run unit tests
        run: poetry run pytest
